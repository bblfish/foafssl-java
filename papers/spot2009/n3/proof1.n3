#see RFC2606 on .example domains 
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix cert: <http://www.w3.org/ns/auth/cert#> .
@prefix rsa: <http://www.w3.org/ns/auth/rsa#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix romeo: <https://romeo.example/#> .
@prefix jult: <https://juliet.example/#> .
@prefix ont: <ont.n3#> .
@prefix : <#> .


#P2
<ldap:issuerDN> a ont:TrustedCA; 
    rdfs:comment "P2: The reasoner knows and trusts this CA";
    ont:hasPrivateKeyFor 84 .

#P3
# On receiving the certificate _:certDoc, the reasoner S knows that
# todo: IT would be good if _:certDoc has a way of refering to itself
# in such a way that the handle it has on itself, could somehow then
# be = to the handle the reasoner has on it. <> won't work.
# also made it a full URL to make it easier to test, namely :certDoc
# perhaps better would be to put it in its own file
#:certDoc :semantics _:certSemantics .
#_:certSemantics = { :certDoc dc:created :issuerDN; 
#                       foaf:primaryTopic :subjectDN .
#                    :subjectDN :hasPrivateKeyFor :pubKey . 
#                    :issuerDN :hasPrivateKeyFor :CAKey . } .
#

#P4
#The SSL handshake means S knows
#of course this will be calculated during the handshake
:client ont:hasPrivateKeyFor 42 .

#P5
# the client sends its certificate as a statement (which is signed) 
:client ont:states <romeoCACert.n3> .

#P6
#after verifying the signature the reasoner S knows that the doc has been signed correctly
<romeoCACert.n3> ont:signature [ ont:signedWith 84 ] .

### we can deduce that
### TOTEST
#:issuerDN :believes _:certSemantics . #ok!

#D4
#To trust someone is to trust what they claim. S trusts TrustedCAs, thus:
# This is overly general. We should limit it to things said in Certs - but it will function for now
#{ ?ca :claims ?s . ?ca a :TrustedCA } => { ?s a log:Truth } .


### we can deduce that
### TOTEST
#<ldap:subjectDN> ont:hasPrivateKeyFor 42 .

### we can deduce that
### TOTEST
#:client owl:sameAs :subjectDN .

